# -*- coding: utf-8 -*-
"""1_Electrical_energy_prediction_using_ANN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VG1Hv1XA29i5_3DpPtHd75A2_lMJfQHK

## ANN Regression model to predict the electrical energy output of a Combined Cycle Power Plant

# Importing the Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf

"""# Importing the Datasets"""

dataset = pd.read_excel('Folds5x2_pp.xlsx')
x = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

print(x)
print(y)

"""# Splitting the data into Training and Test Set"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)

"""# Building the ANN Module

Intializing the ann
"""

ann = tf.keras.models.Sequential()

"""Adding the input layer and first hidden layer"""

ann.add(tf.keras.layers.Dense(units=6,activation='relu'))

"""Adding the second hidden layer"""

ann.add(tf.keras.layers.Dense(units=6,activation='relu'))

"""Adding the Output Layer"""

ann.add(tf.keras.layers.Dense(units=1)) # I am using regression

"""# Training the ANN Model
Intializing the ANN Model
"""

ann.compile(optimizer='adam',loss='mean_squared_error')

"""Training on the dataset"""

ann.fit(x_train,y_train,batch_size=32,epochs=100)

"""# Predicting the results of the Test Set"""

y_pred = ann.predict(x_test)
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1),y_test.reshape(len(y_test),1)),1))